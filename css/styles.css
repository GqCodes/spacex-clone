@import url("https://fonts.googleapis.com/css2?family=Familjen+Grotesk:wght@400;600;700&display=swap");

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
body {
  font-family: "Familjen Grotesk", sans-serif;
  background: #000;
  color: #fff;
}
a {
  text-decoration: none;
  color: #fff;
}
ul {
  list-style: none;
}

/* Header/Navbar */
.main-header {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  z-index: 3;
  display: flex;
  justify-content: space-between;
  align-items: center;
  text-transform: uppercase;
  height: 100px;
  padding: 0 30px;
}

/* first set the size of the container, in this case the logo class, then adjust the width of the image so it fits inside of the container */
.logo {
  width: 210px;
  height: auto;
}
.logo img {
  display: block;
  width: 100%;
  height: auto;
}

/* Desktop Menu */
.desktop-main-menu {
  margin-right: 50px;
  /* did this to have room for hamburger menu */
}
.desktop-main-menu ul {
  display: flex;
}
.desktop-main-menu ul li {
  position: relative;
  /* did this for the underline transition */
  margin-right: 20px;
  padding-bottom: 2px;
  /* this is for spacing for the underline animation */
}
/* Menu item bottom border */
.desktop-main-menu ul li a::after {
  content: "";
  /* have to add the content property when using ::before or ::after */
  position: absolute;
  /* getting positioned absolute with is in the list item set to relative */
  bottom: 0;
  left: 0;
  width: 100%;
  height: 1px;
  background: #fff;
  /* below used to make the lines go away until we hover over the links */
  transform: scaleX(0);
  /* This if for the cool effect */
  transition: transform 0.6s cubic-bezier(0.19, 1, 0.22, 1);
  transform-origin: right center;
}
.desktop-main-menu ul li a:hover::after {
  transform: scaleX(1);
  transform-origin: left center;
  transition-duration: 0.04s;
}

/* sections: this is the main styleing for all the sections as they'll be very similar in design */
section {
  position: relative;
  /* set to relative because the section-inner will be absolute */
  height: 100vh;
  background-position: center center;
  background-repeat: no-repeat;
  background-size: cover;
  text-transform: uppercase;
}

.section-inner {
  position: absolute;
  bottom: 200px;
  left: 150px;
  max-width: 560px;
}

.section-inner h4 {
  font-size: 22px;
  margin-bottom: 5px;
  font-weight: 300;
  animation: fadeInUp 0.5s ease-in-out;
}

.section-inner h2 {
  font-size: 50px;
  font-weight: 700;
  margin-bottom: 20px;
  animation: fadeInUp 0.5s ease-in-out 0.2s;
  animation-fill-mode: both;
}

.section-inner a {
  animation: fadeInUp 0.5s ease-in-out 0.4s;
  animation-fill-mode: both;
  /* this is going to stop it from showing at the start of the animation. only need this on elements preceeding the first element. */
}

/* Background Images */
.section-a {
  background-image: url(../img/section-a.webp);
}
.section-b {
  background-image: url(../img/section-b.webp);
}
.section-c {
  background-image: url(../img/section-c.webp);
}
.section-d {
  background-image: url(../img/section-d.webp);
}
.section-e {
  background-image: url(../img/section-e.webp);
}
.section-f {
  background-image: url(../img/section-f.webp);
}

.btn {
  position: relative;
  /* because the hover element is going to be positioned absolute within the button */
  display: inline-block;
  cursor: pointer;
  text-align: center;
  min-width: 130px;
  padding: 15px 50px;
  margin-top: 10px;
  border: 2px solid #fff;
  text-transform: uppercase;
  font-weight: bold;
  overflow: hidden;
  /* because we don't want the hover effect (element) to come out of its container */
  z-index: 2;
  /* we want the hover to come up but NOT block the text */
}

.btn:hover span {
  color: #000;
}

.btn .hover {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: #fff;
  color: #000;
  z-index: -1;
  /* to make sure the text is still on top */
  transform: translateY(100%);
  /* this is to push it down to not see it until we hover using the transition */
  transition: transform 0.6s cubic-bezier(0.19, 1, 0.22, 1);
}

.btn:hover .hover {
  transform: translateY(0);
}

.scroll-arrow {
  position: absolute;
  bottom: 50px;
  left: 50%;
  transform: translateX(-50%);
  /* without this the arrow isn't at 50%, only the edge of the arrow would be at 50%, so this fixes that*/
  animation: fadeBounce 5s infinite;
}

/* footer */
footer {
  position: relative;
  padding: 55px 0;
}

footer ul {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;
}

footer ul li {
  margin-right: 30px;
  color: #aaa;
  text-transform: uppercase;
  font-size: 13px;
  line-height: 2.5;
}

footer ul li a {
  color: #fff;
  transition: color 0.6s;
}

footer ul li a:hover {
  color: #aaa;
}

/* hamburger menu */
.hamburger {
  position: fixed;
  top: 40px;
  right: 20px;
  z-index: 10;
  /* because you want the hamburger menu over everything */
  cursor: pointer;
  width: 20px;
  height: 20px;
  background: none;
  border: none;
  /* since its a button both background & border are set to none  */
}

.hamburger-top,
.hamburger-middle,
.hamburger-bottom {
  position: absolute;
  width: 20px;
  height: 2px;
  top: 0;
  left: 0;
  background: #fff;
  transition: all 0.5s;
  /* this is to slow down the hamburger menu when clicked instead of being instatnt */
}

/* below just moves each one down. the bottom one MUST be double the middle so its even spacing */
.hamburger-middle {
  transform: translateY(5px);
}
.hamburger-bottom {
  transform: translateY(10px);
}

/* transition hamburger to X when open */
.open {
  transform: rotate(90deg);
}

.open .hamburger-top {
  transform: rotate(45deg) translateY(6px) translateX(6px);
}
.open .hamburger-middle {
  display: none;
}
.open .hamburger-bottom {
  transform: rotate(-45deg) translateY(6px) translateX(-6px);
}

/* overlay */
.overlay-show {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.5);
  z-index: 3;
}

/* stop body scroll */
.stop-scrolling {
  overflow: hidden;
  /* this does what the class says, stops you from scrolling when burger is clicked */
}

/* hide mobile main menu items */
.mobile-only {
  display: none;
}

/* Mobile Menu */
.mobile-main-menu {
  position: fixed;
  top: 0;
  right: 0;
  width: 350px;
  height: 100%;
  background-color: #000;
  z-index: 4;
  display: flex;
  align-items: center;
  justify-content: center;
  transform: translateX(100%);
  transition: transform 0.6s cubic-bezier(0.19, 1, 0.22, 1);
  /* two lines above hide the mobile menu and brings it in smoothly when burger's clicked */
}

/* Bring menu from right */
.show-menu {
  transform: translateX(0);
}

.mobile-main-menu ul {
  display: flex;
  flex-direction: column;
  align-items: flex-end;
  justify-content: center;
  padding: 50px;
  width: 100%;
}

.mobile-main-menu ul li {
  margin-bottom: 20px;
  font-size: 18px;
  text-transform: uppercase;
  border-bottom: 1px dashed #555;
  width: 100%;
  text-align: right;
  padding-bottom: 8px;
}

.mobile-main-menu ul li a {
  color: #fff;
  transition: color 0.6s;
}

.mobile-main-menu ul li a:hover {
  color: #aaa;
}

/* inner pages */
.bg-falcon-9 {
  background-image: url(../img/falcon-9.webp);
}
.bg-falcon-heavy {
  background-image: url(../img/falcon-heavy.webp);
}
.bg-dragon {
  background-image: url(../img/dragon.webp);
}
.section-animate {
  animation: fadeIn 2s ease-in-out;
}

.section-inner-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-transform: uppercase;
  text-align: center;
  width: 80%;
}

.section-inner-center h3 {
  font-size: 100px;
  margin-bottom: 15px;
  animation: fadeInUp 0.5s ease-in-out;
}
.section-inner-center p {
  font-size: 20px;
  animation: fadeInUp 0.5s ease-in-out 0.2s;
  animation-fill-mode: both;
}

/* Stats */
.stats {
  max-width: 960px;
  margin: 0 auto;
  display: flex;
  align-items: center;
  justify-content: space-between;
  text-align: center;
  text-transform: uppercase;
}

.stats div span {
  font-size: 160px;
}

.stats div h4 {
  font-size: 24px;
  font-weight: 300;
}

/* Animations: the fadeInUp is what we name it (similar to a variable in js, we can name it whatever). we want to put this on the individual elements and not the section as a whole because the elements animate seperately, not all at once */
@keyframes fadeInUp {
  0% {
    opacity: 0;
    transform: translateY(140px);
    /* this is used for the position of where the animation starts from. so 140px from the bottom so its fading up */
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeIn {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

@keyframes fadeBounce {
  0%,
  20%,
  50%,
  80%,
  100% {
    opacity: 0;
    transform: translateY(-20px);
    /* its negative because we want it to go up */
  }

  40% {
    opacity: 1;
    transform: translateY(0);
  }
}

/* media queries */
@media (max-width: 960px) {
  /* hide desktop menu */
  .desktop-main-menu {
    display: none;
  }

  /* show main mobile items */
  .mobile-only {
    display: block;
  }

  .section-inner-center h3 {
    font-size: 75px;
  }
}

@media (max-width: 600px) {
  .section-inner {
    bottom: 75px;
    left: 20px;
  }

  .section-inner h2 {
    font-size: 40px;
  }

  footer ul li:first-child {
    position: absolute;
    top: 30px;
    left: 50%;
    transform: translate(-50%, -50%);
  }

  footer ul li {
    margin-right: 15px;
  }

  .logo {
    width: 150px;
    margin: auto;
  }

  .section-inner-center h3 {
    font-size: 50px;
  }

  /* stats */
  .stats {
    flex-direction: column;
  }

  .stats div {
    margin-bottom: 20px;
  }
}
